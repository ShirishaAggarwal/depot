SlistQuickSort.java
------------START---------------------
a = 
---------SORT1 Start------------
# n =      0
# num compare(C)     =  0
# num swap(S)     =  0
# C+S     =  0
Zero elements in array
---------SORT1 End---------------
a =  15
---------SORT1 Start------------
a: 
15->NIL
# n =      1
# num compare(C)     =  0
# num swap(S)     =  0
# C+S     =  0
T(n)=(C+S)/(n)= 0.0(n)
# nlogn    =  0.0
# n*n    =  1
T(n)=(C+S)/(n^2)= 0.0(n^2)
---------SORT1 End---------------
a =  15   5
---------SORT1 Start------------
a: 
5->15->NIL
# n =      2
# num compare(C)     =  9
# num swap(S)     =  0
# C+S     =  9
T(n)=(C+S)/(n)= 4.5(n)
# nlogn    =  2.0
T(n)=(C+S)/(nlogn)= 4.5(n*logn)
# n*n    =  4
T(n)=(C+S)/(n^2)= 2.25(n^2)
---------SORT1 End---------------
a =  15   5  64   8  12  11   4  35
---------SORT1 Start------------
a: 
4->5->8->11->12->15->35->64->NIL
# n =      8
# num compare(C)     =  93
# num swap(S)     =  0
# C+S     =  93
T(n)=(C+S)/(n)= 11.625(n)
# nlogn    =  24.0
T(n)=(C+S)/(nlogn)= 3.875(n*logn)
# n*n    =  64
T(n)=(C+S)/(n^2)= 1.453125(n^2)
---------SORT1 End---------------
a =   6   5   4   3   2   1
---------SORT1 Start------------
a: 
1->2->3->4->5->6->NIL
# n =      6
# num compare(C)     =  93
# num swap(S)     =  0
# C+S     =  93
T(n)=(C+S)/(n)= 15.5(n)
# nlogn    =  15.509775004326936
T(n)=(C+S)/(nlogn)= 5.996218512135395(n*logn)
# n*n    =  36
T(n)=(C+S)/(n^2)= 2.5833333333333335(n^2)
---------SORT1 End---------------
a =   1   2   3   4   5   6
---------SORT1 Start------------
a: 
1->2->3->4->5->6->NIL
# n =      6
# num compare(C)     =  15
# num swap(S)     =  0
# C+S     =  15
T(n)=(C+S)/(n)= 2.5(n)
# nlogn    =  15.509775004326936
T(n)=(C+S)/(nlogn)= 0.967132018086354(n*logn)
# n*n    =  36
T(n)=(C+S)/(n^2)= 0.4166666666666667(n^2)
---------SORT1 End---------------
a =   1   1   1   1   1   1
---------SORT1 Start------------
a: 
1->1->1->1->1->1->NIL
# n =      6
# num compare(C)     =  15
# num swap(S)     =  0
# C+S     =  15
T(n)=(C+S)/(n)= 2.5(n)
# nlogn    =  15.509775004326936
T(n)=(C+S)/(nlogn)= 0.967132018086354(n*logn)
# n*n    =  36
T(n)=(C+S)/(n^2)= 0.4166666666666667(n^2)
---------SORT1 End---------------
a =   3   1   4   1   5   9   2   6   5   3   5   8   9   7   9   3
---------SORT1 Start------------
a: 
1->1->2->3->3->3->4->5->5->5->6->7->8->9->9->9->NIL
# n =      16
# num compare(C)     =  315
# num swap(S)     =  0
# C+S     =  315
T(n)=(C+S)/(n)= 19.6875(n)
# nlogn    =  64.0
T(n)=(C+S)/(nlogn)= 4.921875(n*logn)
# n*n    =  256
T(n)=(C+S)/(n^2)= 1.23046875(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      10000
# num compare(C)     =  987258
# num swap(S)     =  0
# C+S     =  987258
T(n)=(C+S)/(n)= 98.7258(n)
# nlogn    =  132877.1237954945
T(n)=(C+S)/(nlogn)= 7.4298567864807685(n*logn)
# n*n    =  100000000
T(n)=(C+S)/(n^2)= 0.00987258(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      20000
# num compare(C)     =  2148732
# num swap(S)     =  0
# C+S     =  2148732
T(n)=(C+S)/(n)= 107.4366(n)
# nlogn    =  285754.247590989
T(n)=(C+S)/(nlogn)= 7.519510271901758(n*logn)
# n*n    =  400000000
T(n)=(C+S)/(n^2)= 0.00537183(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      30000
# num compare(C)     =  3449418
# num swap(S)     =  0
# C+S     =  3449418
T(n)=(C+S)/(n)= 114.9806(n)
# nlogn    =  446180.2464081182
T(n)=(C+S)/(nlogn)= 7.730996671790887(n*logn)
# n*n    =  900000000
T(n)=(C+S)/(n^2)= 0.003832686666666667(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      40000
# num compare(C)     =  4477236
# num swap(S)     =  0
# C+S     =  4477236
T(n)=(C+S)/(n)= 111.9309(n)
# nlogn    =  611508.495181978
T(n)=(C+S)/(nlogn)= 7.321625186364133(n*logn)
# n*n    =  1600000000
T(n)=(C+S)/(n^2)= 0.0027982725(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      10001
# num compare(C)     =  930564
# num swap(S)     =  0
# C+S     =  930564
T(n)=(C+S)/(n)= 93.04709529047095(n)
# nlogn    =  132891.85427504728
T(n)=(C+S)/(nlogn)= 7.002415648998355(n*logn)
# n*n    =  100020001
T(n)=(C+S)/(n^2)= 0.009303779151131982(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      20001
# num compare(C)     =  2045226
# num swap(S)     =  0
# C+S     =  2045226
T(n)=(C+S)/(n)= 102.25618719064047(n)
# nlogn    =  285769.9780344762
T(n)=(C+S)/(nlogn)= 7.156895955506065(n*logn)
# n*n    =  400040001
T(n)=(C+S)/(n^2)= 0.005112553731845431(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      30001
# num compare(C)     =  3488100
# num swap(S)     =  0
# C+S     =  3488100
T(n)=(C+S)/(n)= 116.26612446251792(n)
# nlogn    =  446196.561802084
T(n)=(C+S)/(nlogn)= 7.817406718492802(n*logn)
# n*n    =  900060001
T(n)=(C+S)/(n^2)= 0.0038754083018072037(n^2)
---------SORT1 End---------------
---------SORT1 Start------------
# n =      40001
# num compare(C)     =  4580700
# num swap(S)     =  0
# C+S     =  4580700
T(n)=(C+S)/(n)= 114.51463713407165(n)
# nlogn    =  611525.225607432
T(n)=(C+S)/(nlogn)= 7.490614954517961(n*logn)
# n*n    =  1600080001
T(n)=(C+S)/(n^2)= 0.002862794358492829(n^2)
---------SORT1 End---------------
------------testing  5001 SORTED ASCENDING numbers----------
---------SORT1 Start------------
# n =      5001
# num compare(C)     =  15000
# num swap(S)     =  0
# C+S     =  15000
T(n)=(C+S)/(n)= 2.9994001199760048(n)
# nlogn    =  61452.29244942758
T(n)=(C+S)/(nlogn)= 0.24409178896530692(n*logn)
# n*n    =  25010001
T(n)=(C+S)/(n^2)= 5.997600719808049E-4(n^2)
---------SORT1 End---------------
------------testing  10001 SORTED ASCENDING numbers----------
---------SORT1 Start------------
# n =      10001
# num compare(C)     =  30000
# num swap(S)     =  0
# C+S     =  30000
T(n)=(C+S)/(n)= 2.9997000299970003(n)
# nlogn    =  132891.85427504728
T(n)=(C+S)/(nlogn)= 0.22574747085633082(n*logn)
# n*n    =  100020001
T(n)=(C+S)/(n^2)= 2.9994000899880014E-4(n^2)
---------SORT1 End---------------
------------testing  15001 SORTED ASCENDING numbers----------
---------SORT1 Start------------
# n =      15001
# num compare(C)     =  45000
# num swap(S)     =  0
# C+S     =  45000
T(n)=(C+S)/(n)= 2.9998000133324445(n)
# nlogn    =  208105.43862206902
T(n)=(C+S)/(nlogn)= 0.21623653998645603(n*logn)
# n*n    =  225030001
T(n)=(C+S)/(n^2)= 1.9997333599976297E-4(n^2)
---------SORT1 End---------------
------------testing  20001 SORTED ASCENDING numbers----------
---------SORT1 Start------------
# n =      20001
# num compare(C)     =  60000
# num swap(S)     =  0
# C+S     =  60000
T(n)=(C+S)/(n)= 2.999850007499625(n)
# nlogn    =  285769.9780344762
T(n)=(C+S)/(nlogn)= 0.20995907412205983(n*logn)
# n*n    =  400040001
T(n)=(C+S)/(n^2)= 1.4998500112492502E-4(n^2)
---------SORT1 End---------------
------------testing  25001 SORTED ASCENDING numbers----------
---------SORT1 Start------------
# n =      25001
# num compare(C)     =  75000
# num swap(S)     =  0
# C+S     =  75000
T(n)=(C+S)/(n)= 2.999880004799808(n)
# nlogn    =  365257.06422528916
T(n)=(C+S)/(nlogn)= 0.20533483769595293(n*logn)
# n*n    =  625050001
T(n)=(C+S)/(n^2)= 1.1999040057596928E-4(n^2)
---------SORT1 End---------------
------------DONE!--------
